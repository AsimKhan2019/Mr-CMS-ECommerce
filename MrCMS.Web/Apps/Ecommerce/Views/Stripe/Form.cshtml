@using MrCMS.Web.Apps.Ecommerce.Payment.Stripe
@model MrCMS.Web.Apps.Ecommerce.Payment.Stripe.Models.StripePaymentDetailsModel
<!-- The stripe script must always load directly from js.stripe.com to remain PCI compliant.
     Thought can not include the script in a bundle or host a copy of it internally. -->
<!-- <script src="https://js.stripe.com/v3/"></script> -->

@{
    var token = ViewData["token"] as string;
}
<hr />
<div class="alert alert-danger" role="alert" data-braintree-errors="true" style="display: none;"></div>

<div class="row">
    <div class="col-sm-8">
        <div data-card="true">
            <h4>Credit or debit card</h4>
            @using (Html.BeginForm("RequestCharge", "Stripe", FormMethod.Post, new { id = "payment-form" }))
            {
                /*Html.Hidden("SourceToken", token)
                @Html.HiddenFor(x => x.SourceToken, new { value = token })  
                 */


                @Html.HiddenFor(x => x.TotalAmount)

                <div class="form-row">

                    <label for="CustomerName"> CustomerName: </label>

                    @Html.EditorFor(model => model.CustomerName)

                    <br />

                    <label for="card-element"> Credit or debit card </label>

                    <div id="card-element">
                        <!-- A Stripe Element will be inserted here. -->
                    </div>

                    <!-- Used to display Element errors. -->
                    <div id="card-errors" role="alert"></div>
                </div>

                <!-- <button>Submit Payment</button> -->

                <input type="submit" value="@Resource("Confirm Order")" class="btn btn-primary btn-lg" data-submit-button="true" />
            }
        </div>

    </div>
</div>

<script>
    var stripe = Stripe('pk_test_XY7OUNA5IDeAwOxOiN2oUbx300173QVGGl');
    var elements = stripe.elements();

    // Custom styling can be passed to options when creating an Element.
    var style =
    {
        base: {
            // Add your base input styles here. For example:
            fontSize: '16px',
            color: "#32325d",
        }

    };

    // Create an instance of the card Element.
    var card = elements.create('card', { style: style });

    // Add an instance of the card Element into the `card-element` <div>.
    card.mount('#card-element');


    //Error handler
    card.addEventListener('change', function (event) {
        var displayError = document.getElementById('card-errors');

        if (event.error) {
            displayError.textContent = event.error.message;
        }
        else {
            displayError.textContent = '';
        }
    });


    //Create a token to securely transmit card information
    // Create a token or display an error when the form is submitted.
    var form = document.getElementById('payment-form');

    form.addEventListener('submit', function (event) {
        event.preventDefault();

        stripe.createToken(card).then(function (result) {
            if (result.error) {
                // Inform the customer that there was an error.
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;
            }
            else {
                // Send the token to your server.
                stripeTokenHandler(result.token);
            }
        });
    });

    //Submit the token and the rest of your form to your server
    function stripeTokenHandler(token) {

       // alert("token Id obtained: " + token.id);

        // Insert the token ID into the form so it gets submitted to the server
        var form = document.getElementById('payment-form');

        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'SourceToken');
        hiddenInput.setAttribute('value', token.id);

        form.appendChild(hiddenInput);

        // Submit the form
        form.submit();
    }


</script>
